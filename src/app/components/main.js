


const Main = () =>{
return(
    <div className="main-section ">
    <div className="flex flex-col border border-gray-500 p-5">
      <div className="border-b border-gray-500 mb-3 pb-2">
        <h6>Ol√° üëã</h6>
      </div>
      <p>
        üôã‚Äç Okwetcha significa DAR/DOAR , a ideia √© criar uma comunidade
        que com auxilio da Engenharia ajude de algum modo pa√≠ses africanos
        ou comunidades africanas a resolverem alguns problemas. üéÆ‚ôüÔ∏èüíªüîåü¶æ
      </p>
    </div>

    <div className="flex-1 py-6  text-white">
      <h1 className="text-2xl s font-bold mb-4 leading-6 tracking-widest">
        Como Desenvolvemos os nossos Projectos.
      </h1>

      <div className=" flex flex-col gap-1">
        {/* Task Suggestions */}
        <div className="bg-gray-700 p-4 rounded-lg shadow">
          <h2 className="text-lg font-bold leading-6 tracking-widest">
            Planeamento e Arquitetura
          </h2>
          <p className="text-gray-300 mt-1 text-wrap leading-6 tracking-widest">
            Planeamento e a Arquitetura de software s√£o fases cruciais no
            desenvolvimento de sistemas complexos e consistem em definir
            como o software ser√° estruturado, como os seus componentes
            interagem e de que forma ele atender√° aos requisitos
            funcionais e n√£o funcionais. Estes conceitos v√£o muito al√©m do
            c√≥digo, pois englobam decis√µes estrat√©gicas e estruturais que
            v√£o orientar toda a implementa√ß√£o, manuten√ß√£o e evolu√ß√£o do
            sistema.
          </p>
        </div>
        {/* Connector */}
        <div className="border-l-2 border-gray-500 h-10 ml-16"></div>

        <div className="bg-gray-700 p-4 rounded-lg shadow">
          <h2 className="text-lg font-bold leading-6 tracking-widest">
            Codifica√ß√£o colaborativa
          </h2>
          <p className="text-gray-300 mt-1 text-wrap leading-6 tracking-widest">
            A codifica√ß√£o colaborativa √© um aspecto vital do
            desenvolvimento de software, especialmente em equipes e
            projetos de grande escala. Esse processo envolve v√°rias
            pr√°ticas, ferramentas e metodologias que facilitam o trabalho
            conjunto e a cria√ß√£o de um c√≥digo consistente, eficiente e
            f√°cil de manter.
          </p>
        </div>
        {/* Connector */}
        <div className="border-l-2 border-gray-500 h-10 ml-16"></div>

        <div className="bg-gray-700 p-4 rounded-lg shadow">
          <h2 className="text-lg font-bold leading-6 tracking-widest">
            Teste de Software
          </h2>
          <p className="text-gray-300 mt-1 text-wrap leading-6 tracking-widest">
            O teste de software √© um processo essencial no desenvolvimento
            de sistemas, utilizado para verificar se uma aplica√ß√£o ou
            sistema est√° funcionando conforme o esperado e atende aos
            requisitos especificados. Esse processo ajuda a identificar
            erros, garantir a qualidade e aumentar a confiabilidade do
            software antes de ser lan√ßado para os usu√°rios finais. Vamos
            detalhar os principais tipos de testes de software, abordagens
            e boas pr√°ticas.
          </p>
        </div>
        {/* Connector */}
        <div className="border-l-2 border-gray-500 h-10 ml-16"></div>

        <div className="bg-gray-700 p-4 rounded-lg shadow">
          <h2 className="text-lg font-bold leading-6 tracking-widest">
            Automa√ß√£o & CI/CD
          </h2>
          <p className="text-gray-300 mt-1 text-wrap leading-6 tracking-widest">
            A automa√ß√£o e as pr√°ticas de CI/CD (Continuous
            Integration/Continuous Delivery) revolucionaram o
            desenvolvimento de software, melhorando a qualidade, a
            velocidade e a confiabilidade dos projetos. A ideia √© criar um
            fluxo de trabalho cont√≠nuo, onde as mudan√ßas no c√≥digo s√£o
            testadas, integradas e implantadas automaticamente, reduzindo
            o esfor√ßo manual e o tempo de entrega.
          </p>
        </div>
        {/* Connector */}
        <div className="border-l-2 border-gray-500 h-10 ml-16"></div>

        <div className="bg-gray-700 p-4 rounded-lg shadow">
          <h2 className="text-lg font-bold leading-6 tracking-widest">
            Conteneriza√ß√£o
          </h2>
          <p className="text-gray-300 mt-1 text-wrap leading-6 tracking-widest ">
            A conteneriza√ß√£o √© uma tecnologia que permite empacotar uma
            aplica√ß√£o e todas as suas depend√™ncias (bibliotecas,
            configura√ß√µes, etc.) em um container isolado, que pode ser
            executado de maneira consistente em diferentes ambientes. Ela
            garante que o software funcione de forma previs√≠vel,
            independentemente de onde est√° sendo executado (como no
            ambiente de desenvolvimento, homologa√ß√£o, produ√ß√£o ou entre
            diferentes plataformas de nuvem).
          </p>
        </div>
        <div className="border-l-2 border-gray-500 h-10 ml-16"></div>

        <div className="bg-gray-700 p-4 rounded-lg shadow">
          <h2 className="text-lg font-bold leading-6 tracking-widest">
            Deployment
          </h2>
          <p className="text-gray-300 mt-1 text-wrap leading-6 tracking-widest ">
            Processo de disponibilizar uma aplica√ß√£o ou sistema em um
            ambiente espec√≠fico, como produ√ß√£o, para que os usu√°rios
            finais possam acess√°-lo e utiliz√°-lo. Este processo envolve
            v√°rias etapas, como configurar servidores, definir vari√°veis
            de ambiente, executar scripts de configura√ß√£o e validar o
            funcionamento da aplica√ß√£o ap√≥s sua disponibiliza√ß√£o.
          </p>
        </div>
      </div>
    </div>
  </div>
)
}

export default Main